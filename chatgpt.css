body {
  --bg-primary: var(--my-bg);
  --text-primary: var(--my-text);
  --text-secondary: var(--text-primary);
}

header.bg-token-main-surface-primary {
  background: none;
}

/* Wider chat window */
.xl\:max-w-\[48rem\], .max-w-\[80\%\] {
    max-width: 100%;
}

.mx-auto {
    margin-left: 0;
    margin-right: 0;
    width: 100%;
    max-width: 100%;
}

code, pre {
  font-family: var(--my-fontcode) !important;
  font-size: 9pt;
}

:not(pre) > code:not(:has(span)) {
  border: var(--my-inlinecode-border);
  border-radius: var(--my-inlinecode-border-radius);
}

.cm-editor * {
    font-size: 9pt;
    font-family: var(--my-fontcode) !important;
}

.dark {
    --main-surface-background: var(--my-bg);
    --main-surface-primary: var(--my-bg);
    --main-surface-secondary: var(--my-bg);
    --main-surface-tertiary: var(--my-bg);
    --main-surface-selected: var(--my-bg);
   
    /*--text-tertiary: */
    /*--text-quaternary: */
   
    --border-medium: #080808;
}

.prose {
  --tw-prose-body: var(--my-text);
}

.dark\:prose-invert:is(.dark *) :where(code):not(:where([class~="not-prose"] *)) {
    color: var(--my-inlinecode-color);
    background-color: var(--my-inlinecode-bg);
}

.prose strong:not(:is(h1,h2,h3,h4) strong) {
    /*color: #28b463;*/
    color: var(--my-strong);
}

.prose :is(h1,h2,h3,h4) strong {
    color: var(--my-heading);
}

.prose :is(h1,h2,h3,h4,h5,h6) {
    color: var(--my-heading);
    font-family: var(--my-fontheading);
}

.dark code[class*="language-"] {
    color: var(--text-primary);
}

.dark .hljs-title.class_, .dark .hljs-type {
    color: var(--my-high-type);
}

.dark .hljs-keyword {
    color: var(--my-high-kw);
}

.dark .hljs-number, .dark .hljs-string {
    color: var(--my-high-string);
}

.dark .hljs-title.function_.invoke__ {
    color: white;
}

.dark .hljs-title.function_ {
    color: var(--text-primary);
}

.dark .hljs-variable {
    color: var(--text-primary);    
}

:is(.light .dark,.dark) code[class*="language-"] {
  color: var(--my-text);
}

section.popover,
.bg-token-sidebar-surface-primary,
.dark\:prose-invert:is(.dark *) :where(code):not(:where([class~="not-prose"] *)),
.bg-token-main-surface-primary
{
  background-color: var(--my-panel-bgcolor);
  background-image: var(--my-panel-bgimage);
  background-blend-mode: var(--my-panel-bgblend);
}

a {
  color: var(--my-text);
}
aside h2 {
  color: var(--my-heading);
}
